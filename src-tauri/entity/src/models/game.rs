//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "game")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub es_id: i32,
    pub name: i32,
    pub images: String,
    pub brand_id: i32,
    pub library_registered: bool,
    pub library_registered_at: String,
    pub last_played_at: String,
    pub folder: String,
    pub executable_path: String,
    pub executable_auto_detect: bool,
    pub play_count: i32,
    pub play_time: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::brand::Entity",
        from = "Column::BrandId",
        to = "super::brand::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Brand,
}

impl Related<super::brand::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Brand.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
